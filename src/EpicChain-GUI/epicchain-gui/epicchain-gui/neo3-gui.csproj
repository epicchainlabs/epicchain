<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net8.0</TargetFramework>
    <RootNamespace>Neo</RootNamespace>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(SpaRoot)node_modules\**;Data*\**</DefaultItemExcludes>

  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <NoWarn>1701;1702;1998;</NoWarn>
  </PropertyGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->

    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**">
      <!--<CopyToOutputDirectory>Always</CopyToOutputDirectory>-->
    </None>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="7.0.1" />
    <PackageReference Include="Neo" Version="3.7.5" />
    <PackageReference Include="Neo.LevelDb.Dev" Version="3.0.0-pre4" />
  </ItemGroup>

  <ItemGroup>
    <!--<ProjectReference Include="..\..\neo\src\neo\neo.csproj" />-->
  </ItemGroup>

  <ItemGroup>
	  <None Update="Plugins\LevelDBStore\LevelDBStore.dll">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
  </ItemGroup>




  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>


  <!--<Target Name="DebugBuild" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' ">
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm build" />

  </Target>-->
  <!--<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    -->
  <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
  <!--
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    -->
  <!--<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />-->
  <!--

    -->
  <!-- Include the newly-built files in the publish output -->
  <!--
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>-->
</Project>
